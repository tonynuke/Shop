{
  "openapi": "3.0.1",
  "info": {
    "title": "dotnet-swagger",
    "contact": {
      "name": "Anton Romanyuk",
      "email": "tonynuke@hotmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "paths": {
    "/api/v1/brands/get": {
      "post": {
        "tags": [
          "Brands"
        ],
        "summary": "Gets brands page.",
        "operationId": "GetBrandsPage",
        "requestBody": {
          "description": "Page.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrandPageContent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandPageContent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandPageContent"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/brands/{id}": {
      "get": {
        "tags": [
          "Brands"
        ],
        "summary": "Searches brand by id.",
        "operationId": "FindBrandById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Brands"
        ],
        "summary": "Updates brand.",
        "operationId": "UpdateBrand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Brands"
        ],
        "summary": "Deletes brand.",
        "operationId": "DeleteBrand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/brands": {
      "post": {
        "tags": [
          "Brands"
        ],
        "summary": "Creates brand.",
        "operationId": "CreateBrand",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eventspublisher/process": {
      "post": {
        "tags": [
          "EventsPublisher"
        ],
        "summary": "Publish events.",
        "operationId": "ProcessEvents",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Creates new item.",
        "operationId": "CreateItem",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Finds item by id.",
        "operationId": "FindItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Deletes item.",
        "operationId": "DeleteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/get-by-ids": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Finds items by ids.",
        "operationId": "FindItemsByIds",
        "requestBody": {
          "description": "Items ids.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/search": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Searches items.",
        "operationId": "SearchItems",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsQueryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsQueryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Brand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "domainEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainEventBase"
            },
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "imageUrl": {
            "type": "string",
            "description": "Gets or sets image url.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Brand."
      },
      "BrandDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets id.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets name.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Gets image url.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Brand model."
      },
      "BrandPageContent": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Brand"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateBrandDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets name."
          },
          "description": {
            "type": "string",
            "description": "Gets description.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Brand creation model."
      },
      "CreateItemDto": {
        "type": "object",
        "properties": {
          "brandId": {
            "type": "string",
            "description": "Gets brand id.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets description.",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Gets price.",
            "format": "decimal"
          }
        },
        "additionalProperties": false,
        "description": "Create item dto."
      },
      "DomainEventBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "parentEntityId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets identifier.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets name.",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Gets price.",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "description": "Gets description.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Item model."
      },
      "ItemsQueryDto": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Gets query.",
            "nullable": true
          },
          "page": {
            "$ref": "#/components/schemas/PageDto"
          }
        },
        "additionalProperties": false,
        "description": "Model for items searching."
      },
      "Name": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Gets value.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Name."
      },
      "PageDto": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "UpdateBrandDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets name."
          }
        },
        "additionalProperties": false,
        "description": "Brand update model."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Insert JWT with Bearer into field",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}